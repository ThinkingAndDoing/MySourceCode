Option Explicit

Public Sub DATA_Export()
    Dim sh As Worksheet
    Set sh = Worksheets("WarningConfig")
    
    sh.Select
    sh.Activate
    Call DATA_Export_WD 'WarningDispatchers

    sh.Select
    sh.Activate
    Call DATA_Export_WO 'WarningObjects

End Sub
'print WarningDispatchers.xml
Public Sub DATA_Export_WD()
    Dim No As Integer
    Dim Name As Integer
    Dim DisplayMode As Integer
    Dim WarningStrategy As Integer
    Dim Priority As Integer
    Dim SubPriority As Integer
    Dim TypeID As Integer
    Dim PopupBitmap0 As Integer
    Dim PopupBitmap1 As Integer
    Dim Category As Integer
    Dim StrategyState As Integer
    Dim ReqPriority As Integer
    
    No = 1
    Name = 2
    DisplayMode = 4
    Category = 5
    WarningStrategy = 6
    StrategyState = 7
    ReqPriority = 8
    Priority = 9
    SubPriority = 10
    TypeID = 14
    PopupBitmap0 = 16
    PopupBitmap1 = 17
    
    Dim Data1 As String, Text As String
    'Dim file
    'Dim tempStr As String
    Dim index As Integer, istart As Integer, iend As Integer
    Dim index2 As Integer, istart2 As Integer, iend2 As Integer
    Dim sh As Worksheet
    Dim shWType As Worksheet
    
    Set sh = Worksheets("WarningConfig")
    Set shWType = Worksheets("WarningType")

    On Error GoTo Hell

    Data1 = ThisWorkbook.Path & "\output\WarningDispatchers.xml"

    Open Data1 For Output As #1

    Print #1, "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "utf-8" & Chr(34) & "?>"
    Print #1,
    Print #1, "<WarningConfiguration>"
    Print #1, "<WarningDispatcher Name=" & Chr(34) & "SAIC_IP31" & Chr(34) & " Type=" & Chr(34) & "WarningDispatcher" _
    & Chr(34) & ">"
    Print #1, "<Content>"
    Print #1,
    
    istart = 2
    iend = 200
    For index = istart To iend
        If Not IsEmpty(sh.Cells(index, Name)) Then
            Print #1, "<!-- Warning Name = DisplayMode_Category_ReqPriority_TypeID_Name -->"
            Print #1, "<Warning Name=" & Chr(34) & sh.Cells(index, DisplayMode) & "_" & sh.Cells(index, Category) & "_" & _
                        sh.Cells(index, ReqPriority) & "_" & sh.Cells(index, TypeID) & "_" & sh.Cells(index, Name) & _
                        Chr(34) & " Type=" & Chr(34) & "HMI::WWS::WarningObject" & Chr(34) & ">"
            Print #1, "<Properties>"
            Print #1, "<Property Name=" & Chr(34) & "ActiveModes" & Chr(34) & ">"
            Print #1, "<ListValue>"
            Print #1, "<Enum>" & sh.Cells(index, DisplayMode) & "</Enum>"
            Print #1, "</ListValue>"
            Print #1, "</Property>"
            Print #1, "</Properties>"
            Print #1, "</Warning>"
        End If
    Next index

    istart = 2
    iend = 20
    For index = istart To iend
        If Not IsEmpty(shWType.Cells(index, 6)) Then
        'print all WarningStrategys
            Print #1, "<WarningStrategy Name=" & Chr(34) & shWType.Cells(index, 6) & Chr(34) & " Type=" & Chr(34) & _
            "HMI::WSMS::WarningStrategy" & Chr(34) & ">"
            Print #1, "<Properties>"
            If shWType.Cells(index, 7) <> "-" Then
                Print #1, "<Property Name=" & Chr(34) & "AddNewWarningPolicy" & Chr(34) & ">"
                Print #1, "<Enum>" & shWType.Cells(index, 7) & "</Enum>"
                Print #1, "</Property>"
            End If
            If shWType.Cells(index, 8) <> "-" Then
                Print #1, "<Property Name=" & Chr(34) & "SelectNextWarningPolicy" & Chr(34) & ">"
                Print #1, "<Enum>" & shWType.Cells(index, 8) & "</Enum>"
                Print #1, "</Property>"
            End If
            Print #1, "</Properties>"
            Print #1, "<Content>"
            Print #1,
            
            istart2 = 2
            iend2 = 200
            For index2 = istart2 To iend2
            'print all WarningViews
                If InStr(sh.Cells(index2, WarningStrategy), shWType.Cells(index, 6)) <> 0 Then
                    Print #1, "<!-- WarningName = DisplayMode_Category_ReqPriority_TypeID_Name -->"
                    Print #1, "<WarningView WarningName=" & Chr(34) & sh.Cells(index2, DisplayMode) & "_" & sh.Cells(index2, Category) & "_" & _
                        sh.Cells(index2, ReqPriority) & "_" & sh.Cells(index2, TypeID) & "_" & sh.Cells(index2, Name) & Chr(34) & " Type=" & _
                    Chr(34) & "HMI::WWS::WarningView" & Chr(34) & " TimeSpanList=" & Chr(34) & "TS_Popup_Maximum_Display" _
                    & Chr(34) & ">"
                    Print #1, "<Properties>"
                    Print #1, "<Property Name=" & Chr(34) & "StrategyState" & Chr(34) & ">"
                    Print #1, "<Enum>" & sh.Cells(index2, StrategyState) & "</Enum>"
                    Print #1, "</Property>"
                    If Not IsEmpty(sh.Cells(index2, Priority)) Then
                        Print #1, "<Property Name=" & Chr(34) & "Priority" & Chr(34) & ">"
                        Print #1, "<Constant>" & sh.Cells(index2, Priority) & "</Constant>"
                        Print #1, "</Property>"
                    End If
                    If Not IsEmpty(sh.Cells(index2, SubPriority)) Then
                        Print #1, "<Property Name=" & Chr(34) & "SubPriority" & Chr(34) & ">"
                        Print #1, "<Constant>" & sh.Cells(index2, SubPriority) & "</Constant>"
                        Print #1, "</Property>"
                    End If
                    Print #1, "</Properties>"
                    Print #1, "</WarningView>"
                    Print #1,
                End If
            Next index2
            Print #1, "</Content>"
            Print #1, "</WarningStrategy>"
            Print #1,
            
        End If
    Next index

    Print #1, "</Content>"
    Print #1, "</WarningDispatcher>"
    Print #1, "</WarningConfiguration>"

    Close #1

    Exit Sub

Hell:
    Close #1
    MsgBox "Error No.: " & Err.Number & vbNewLine & vbNewLine _
    & "Description: " & Err.Description _
    , vbCritical, "Error"

End Sub

'print WarningObjects.xml
Public Sub DATA_Export_WO()
    Dim No As Integer
    Dim Name As Integer
    Dim DisplayMode As Integer
    Dim WarningStrategy As Integer
    Dim Priority As Integer
    Dim SubPriority As Integer
    Dim TypeID As Integer
    Dim PopupBitmap0 As Integer
    Dim PopupBitmap1 As Integer
    Dim Category As Integer
    Dim StrategyState As Integer
    Dim ReqPriority As Integer
    
    No = 1
    Name = 2
    DisplayMode = 4
    Category = 5
    WarningStrategy = 6
    StrategyState = 7
    ReqPriority = 8
    Priority = 9
    SubPriority = 10
    TypeID = 14
    PopupBitmap0 = 16
    PopupBitmap1 = 17
    
    Dim Data1 As String, Text As String
    'Dim file
    'Dim tempStr As String
    Dim index As Integer, istart As Integer, iend As Integer
    Dim index2 As Integer, istart2 As Integer, iend2 As Integer
    Dim sh As Worksheet
    Dim shWType As Worksheet
    
    Set sh = Worksheets("WarningConfig")
    Set shWType = Worksheets("WarningType")

    On Error GoTo Hell

    Data1 = ThisWorkbook.Path & "\output\WarningObjects.xml"

    Open Data1 For Output As #2

    Print #2, "<?xml version=" & Chr(34) & "1.0" & Chr(34) & " encoding=" & Chr(34) & "utf-8" & Chr(34) & "?>"
    Print #2,
    Print #2, "<Objects>"
    
    istart2 = 2
    iend2 = 20
    For index2 = istart2 To iend2
    'traverse WarningType sheet
        If Not IsEmpty(shWType.Cells(index2, 2)) Then
            Print #2, "<Array Name=" & Chr(34) & "Warnings" & Chr(34) & " ID=" & Chr(34) & shWType.Cells(index2, 1) _
            & Chr(34) & " Type=" & Chr(34) & shWType.Cells(index2, 2) & Chr(34) & ">"
            Print #2,
            istart = shWType.Cells(index2, 3)
            iend = shWType.Cells(index2, 4)
            For index = istart To iend
            'traverse WarningConfig sheet
                If sh.Cells(index, Name) <> "-" Then
                    Print #2, "<Object>"
                    Print #2, "<Properties>"
                    If sh.Cells(index, TypeID) <> "-" Then
                        Print #2, "<Property Name=" & Chr(34) & "Type" & Chr(34) & ">"
                        Print #2, "<Constant>" & sh.Cells(index, TypeID) & "</Constant>"
                        Print #2, "</Property>"
                    End If
                    If sh.Cells(index, No) <> "-" And sh.Cells(index, Name) <> "-" Then
                        Print #2, "<Property Name=" & Chr(34) & "TextEntry" & Chr(34) & ">"
                        Print #2, "<!-- Resource = DisplayMode_Category_ReqPriority_TypeID_Name -->"
                        Print #2, "<Resource>" & sh.Cells(index, DisplayMode) & "_" & sh.Cells(index, Category) & "_" & _
                        sh.Cells(index, ReqPriority) & "_" & sh.Cells(index, TypeID) & "_" & sh.Cells(index, Name) _
                        & "</Resource>"
                        Print #2, "</Property>"
                    End If
                    If sh.Cells(index, PopupBitmap0) <> "-" Then
                        Print #2, "<Property Name=" & Chr(34) & "PopupBitmap" & Chr(34) & ">"
                        Print #2, "<Resource>" & sh.Cells(index, PopupBitmap0) & "</Resource>"
                        Print #2, "</Property>"
                    End If
                    If sh.Cells(index, PopupBitmap1) <> "-" Then
                        Print #2, "<Property Name=" & Chr(34) & "PopupBitmap" & Chr(34) & ">"
                        Print #2, "<Resource>" & sh.Cells(index, PopupBitmap1) & "</Resource>"
                        Print #2, "</Property>"
                    End If
                    Print #2, "</Properties>"
                    Print #2, "</Object>"
                End If
            Next index
    
            Print #2, "</Array>"
        End If
    Next index2
    Print #2, "</Objects>"

    Close #2

    Exit Sub

Hell:
    Close #2
    MsgBox "Error No.: " & Err.Number & vbNewLine & vbNewLine _
    & "Description: " & Err.Description _
    , vbCritical, "Error"
End Sub

